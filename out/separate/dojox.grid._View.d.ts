/// <reference path="Object.d.ts" />
/// <reference path="dijit._Widget.d.ts" />
/// <reference path="dijit._Templated.d.ts" />
module dojox.grid{
export class _View extends dijit._Widget {
templateString : String;
templatePath : String;
widgetsInTemplate : bool;
_skipNodeCache : bool;
_earlyTemplatedStartup : bool;
_attachPoints : any;
_attachEvents : any[];
declaredClass : any;
_startupWidgets : Object;
_supportingWidgets : Object;
_templateCache : Object;
_stringRepl (tmpl:any) : any;
_fillContent (source:HTMLElement) : any;
_attachTemplateNodes (rootNode:HTMLElement,getAttrFunc?:Function) : any;
getCachedTemplate (templatePath:String,templateString?:String,alwaysUseString?:any) : any;
defaultWidth : String;
viewWidth : String;
themeable : bool;
classTag : String;
marginBottom : number;
rowPad : number;
_togglingColumn : number;
_headerBuilderClass : Object;
_contentBuilderClass : Object;
rowNodes : Object;
content : Object;
header : Object;
structure : any;
noscroll : any;
simpleStructure : Object;
flexCells : Object;
bottomMarker : Object;
topMarker : Object;
arrowDim : Object;
_source_conn : Object;
_source_sub : Object;
_removingColumn : bool;
index : any;
contentWidth : Object;
_hasHScroll : bool;
_hasVScroll : bool;
contentNode : any;
lastTop : number;
firstScroll : number;
focus () : any;
setStructure (inStructure:any) : any;
_onBeforeRow () : any;
_onAfterRow () : any;
_cleanupRowWidgets (inRowNode:any) : any;
onBeforeRow (inRowIndex:any,cells:any) : any;
onAfterRow (inRowIndex:any,cells:any,inRowNode:any) : any;
testFlexCells () : any;
updateStructure () : any;
getScrollbarWidth () : number;
getColumnsWidth () : number;
setColumnsWidth (width:any) : any;
getWidth () : String;
getContentWidth () : String;
render () : any;
_hide (node:any) : any;
_onDndDropBefore (source:any,nodes:any,copy:any) : any;
_onDndDrop (source:any,nodes:any,copy:any) : any;
renderHeader () : any;
_getHeaderContent (inCell:any) : any;
resize () : any;
hasHScrollbar (reset:any) : bool;
hasVScrollbar (reset:any) : bool;
convertColPctToFixed () : any;
adaptHeight (minusScroll:any) : any;
adaptWidth () : any;
setSize (w:any,h:any) : any;
renderRow (inRowIndex:any) : any;
createRowNode (inRowIndex:any) : any;
buildRow (inRowIndex:any,inRowNode:any) : any;
buildRowContent (inRowIndex:any,inRowNode:any) : any;
rowRemoved (inRowIndex:any) : any;
getRowNode (inRowIndex:any) : any;
getCellNode (inRowIndex:any,inCellIndex:any) : any;
getHeaderCellNode (inCellIndex:any) : any;
styleRow (inRowIndex:any,inRowNode:any) : any;
styleRowNode (inRowIndex:any,inRowNode:any) : any;
doStyleRowNode (inRowIndex:any,inRowNode:any) : any;
updateRow (inRowIndex:any) : any;
updateRowStyles (inRowIndex:any) : any;
doscroll (inEvent:any) : any;
setScrollTop (inTop:any) : any;
doContentEvent (e:any) : any;
doHeaderEvent (e:any) : any;
dispatchContentEvent (e:any) : any;
dispatchHeaderEvent (e:any) : any;
setColWidth (inIndex:any,inWidth:any) : any;
update () : any;
}
}

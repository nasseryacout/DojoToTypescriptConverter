/// <reference path="Object.d.ts" />
module dojox.gantt{
export class GanttChart{
project : any[];
contentDataHeight : number;
startDate : Object;
_events : any[];
arrProjects : any[];
pixelsPerDay : number;
pixelsPerWorkHour : number;
pixelsPerHour : number;
zoomInClickEvent : Object;
zoomInKeyEvent : Object;
zoomOutClickEvent : Object;
zoomOutKeyEvent : Object;
microClickEvent : Object;
microKeyEvent : Object;
teleClickEvent : Object;
teleKeyEvent : Object;
saveClickEvent : Object;
saveKeyEvent : Object;
loadClickEvent : Object;
loadKeyEvent : Object;
totalDays : number;
maxTaskEndPos : any;
tempDayInPixels : number;
tableControl : Object;
countDays : number;
panelTime : Object;
panelNameHeaders : Object;
tabMenu : Object;
resource : Object;
panelNameHeadersCover : Object;
initialPos : number;
resourceChartHeight : any;
withResource : any;
correctError : any;
isShowConMenu : bool;
isContentEditable : bool;
withTaskId : any;
animation : any;
saveProgramPath : String;
dataFilePath : String;
contentHeight : number;
contentWidth : number;
content : Object;
scrollBarWidth : number;
panelTimeHeight : number;
maxWidthPanelNames : number;
maxWidthTaskNames : number;
minWorkLength : number;
heightTaskItem : number;
heightTaskItemExtra : number;
hsPerDay : number;
panelTimeExpandDelta : number;
divTimeInfo : Object;
xmlLoader : Object;
isMoving : bool;
isResizing : bool;
animationNodes : any[];
scale : number;
months : Object;
getProject (id:any) : any;
checkPosPreviousTask (predTask:any,task:any) : any;
correctPosPreviousTask (predTask:any,ctask:any,ctaskObj:any) : any;
correctPosParentTask (parentTask:any,ctask:any) : any;
checkPosParentTaskInTree (parentTask:any) : any;
setPreviousTask (project:any) : any;
setPreviousTaskInTree (parentTask:any) : any;
checkPosParentTask (parentTask:any,task:any) : any;
addProject (projectItem:any) : any;
deleteProject (id:any) : any;
insertProject (id:any,name:any,startDate:any) : any;
openTree (parentTask:any) : any;
openNode (parentTask:any) : any;
getLastCloseParent (task:any) : any;
getProjectItemById (id:any) : any;
clearAll () : any;
clearEvents () : any;
clearData () : any;
clearItems () : any;
buildUIContent () : any;
loadJSONData (filename:any) : any;
loadJSONString (content:any) : any;
buildChildTasksData (parentTask:any,childTaskItems:any) : any;
getJSONData () : any;
getChildTasksData (childTasks:any) : any;
saveJSONData (fileName:any) : any;
sortTaskStartTime (a:any,b:any) : any;
sortProjStartDate (a:any,b:any) : any;
setStartTimeChild (parentTask:any) : any;
createPanelTasks () : any;
refreshParams (pixelsPerDay:any) : any;
createPanelNamesTasksHeader () : any;
createPanelNamesTasks () : any;
createPanelTime () : any;
adjustPanelTime (width:any) : any;
addYearInPanelTime (row:any,count:any,year:any) : any;
addMonthInPanelTime (row:any,count:any,month:any,year:any) : any;
addWeekInPanelTime (row:any,count:any,week:any) : any;
addDayInPanelTime (row:any) : any;
addHourInPanelTime (row:any) : any;
incHeightPanelTasks (height:any) : any;
incHeightPanelNames (height:any) : any;
checkPosition () : any;
checkHeighPanelTasks () : any;
sortTasksByStartTime (project:any) : any;
sortChildTasks (parenttask:any) : any;
refresh (count:any,current:any,multi:any) : any;
switchTeleMicroView (dip:any) : any;
refreshController () : any;
init () : any;
postLoadData () : any;
postBindEvents () : any;
getStartDate () : any;
getCountDays () : any;
createTasks (project:any) : any;
createChildItemControls (arrChildTasks:any,project:any) : any;
getPosOnDate (startTime:any) : any;
getWidthOnDuration (duration:any) : any;
getLastChildTask (task:any) : any;
removeCell (row:any) : any;
}
}

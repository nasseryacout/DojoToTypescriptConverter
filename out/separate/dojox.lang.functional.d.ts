module dojox.lang.functional{
export var array : Object;
export var arg : Object;
export var fold : Object;
export var object : Object;
export var reversed : Object;
export var scan : Object;
export var sequence : Object;
export var util : Object;
export function filter (a:any[],f:Function,o?:Object) : any[];
export function filter (a:any[],f:String,o?:Object) : any[];
export function filter (a:any[],f:any[],o?:Object) : any[];
export function filter (a:String,f:Function,o?:Object) : any[];
export function filter (a:String,f:String,o?:Object) : any[];
export function filter (a:String,f:any[],o?:Object) : any[];
export function filter (a:Object,f:Function,o?:Object) : any[];
export function filter (a:Object,f:String,o?:Object) : any[];
export function filter (a:Object,f:any[],o?:Object) : any[];
export function forEach (a:any[],f:Function,o?:Object) : Object;
export function forEach (a:any[],f:String,o?:Object) : Object;
export function forEach (a:any[],f:any[],o?:Object) : Object;
export function forEach (a:String,f:Function,o?:Object) : Object;
export function forEach (a:String,f:String,o?:Object) : Object;
export function forEach (a:String,f:any[],o?:Object) : Object;
export function forEach (a:Object,f:Function,o?:Object) : Object;
export function forEach (a:Object,f:String,o?:Object) : Object;
export function forEach (a:Object,f:any[],o?:Object) : Object;
export function map (a:any[],f:Function,o?:Object) : any[];
export function map (a:any[],f:String,o?:Object) : any[];
export function map (a:any[],f:any[],o?:Object) : any[];
export function map (a:String,f:Function,o?:Object) : any[];
export function map (a:String,f:String,o?:Object) : any[];
export function map (a:String,f:any[],o?:Object) : any[];
export function map (a:Object,f:Function,o?:Object) : any[];
export function map (a:Object,f:String,o?:Object) : any[];
export function map (a:Object,f:any[],o?:Object) : any[];
export function every (a:any[],f:Function,o?:Object) : bool;
export function every (a:any[],f:String,o?:Object) : bool;
export function every (a:any[],f:any[],o?:Object) : bool;
export function every (a:String,f:Function,o?:Object) : bool;
export function every (a:String,f:String,o?:Object) : bool;
export function every (a:String,f:any[],o?:Object) : bool;
export function every (a:Object,f:Function,o?:Object) : bool;
export function every (a:Object,f:String,o?:Object) : bool;
export function every (a:Object,f:any[],o?:Object) : bool;
export function some (a:any[],f:Function,o?:Object) : bool;
export function some (a:any[],f:String,o?:Object) : bool;
export function some (a:any[],f:any[],o?:Object) : bool;
export function some (a:String,f:Function,o?:Object) : bool;
export function some (a:String,f:String,o?:Object) : bool;
export function some (a:String,f:any[],o?:Object) : bool;
export function some (a:Object,f:Function,o?:Object) : bool;
export function some (a:Object,f:String,o?:Object) : bool;
export function some (a:Object,f:any[],o?:Object) : bool;
export function inlineLambda (lambda:String,init:String,add2dict?:Function) : String;
export function inlineLambda (lambda:String,init:any[],add2dict?:Function) : String;
export function binrec (cond:Function,then:Function,before:Function,after:Function) : any;
export function binrec (cond:Function,then:Function,before:Function,after:String) : any;
export function binrec (cond:Function,then:Function,before:Function,after:any[]) : any;
export function binrec (cond:Function,then:Function,before:String,after:Function) : any;
export function binrec (cond:Function,then:Function,before:String,after:String) : any;
export function binrec (cond:Function,then:Function,before:String,after:any[]) : any;
export function binrec (cond:Function,then:Function,before:any[],after:Function) : any;
export function binrec (cond:Function,then:Function,before:any[],after:String) : any;
export function binrec (cond:Function,then:Function,before:any[],after:any[]) : any;
export function binrec (cond:Function,then:String,before:Function,after:Function) : any;
export function binrec (cond:Function,then:String,before:Function,after:String) : any;
export function binrec (cond:Function,then:String,before:Function,after:any[]) : any;
export function binrec (cond:Function,then:String,before:String,after:Function) : any;
export function binrec (cond:Function,then:String,before:String,after:String) : any;
export function binrec (cond:Function,then:String,before:String,after:any[]) : any;
export function binrec (cond:Function,then:String,before:any[],after:Function) : any;
export function binrec (cond:Function,then:String,before:any[],after:String) : any;
export function binrec (cond:Function,then:String,before:any[],after:any[]) : any;
export function binrec (cond:Function,then:any[],before:Function,after:Function) : any;
export function binrec (cond:Function,then:any[],before:Function,after:String) : any;
export function binrec (cond:Function,then:any[],before:Function,after:any[]) : any;
export function binrec (cond:Function,then:any[],before:String,after:Function) : any;
export function binrec (cond:Function,then:any[],before:String,after:String) : any;
export function binrec (cond:Function,then:any[],before:String,after:any[]) : any;
export function binrec (cond:Function,then:any[],before:any[],after:Function) : any;
export function binrec (cond:Function,then:any[],before:any[],after:String) : any;
export function binrec (cond:Function,then:any[],before:any[],after:any[]) : any;
export function binrec (cond:String,then:Function,before:Function,after:Function) : any;
export function binrec (cond:String,then:Function,before:Function,after:String) : any;
export function binrec (cond:String,then:Function,before:Function,after:any[]) : any;
export function binrec (cond:String,then:Function,before:String,after:Function) : any;
export function binrec (cond:String,then:Function,before:String,after:String) : any;
export function binrec (cond:String,then:Function,before:String,after:any[]) : any;
export function binrec (cond:String,then:Function,before:any[],after:Function) : any;
export function binrec (cond:String,then:Function,before:any[],after:String) : any;
export function binrec (cond:String,then:Function,before:any[],after:any[]) : any;
export function binrec (cond:String,then:String,before:Function,after:Function) : any;
export function binrec (cond:String,then:String,before:Function,after:String) : any;
export function binrec (cond:String,then:String,before:Function,after:any[]) : any;
export function binrec (cond:String,then:String,before:String,after:Function) : any;
export function binrec (cond:String,then:String,before:String,after:String) : any;
export function binrec (cond:String,then:String,before:String,after:any[]) : any;
export function binrec (cond:String,then:String,before:any[],after:Function) : any;
export function binrec (cond:String,then:String,before:any[],after:String) : any;
export function binrec (cond:String,then:String,before:any[],after:any[]) : any;
export function binrec (cond:String,then:any[],before:Function,after:Function) : any;
export function binrec (cond:String,then:any[],before:Function,after:String) : any;
export function binrec (cond:String,then:any[],before:Function,after:any[]) : any;
export function binrec (cond:String,then:any[],before:String,after:Function) : any;
export function binrec (cond:String,then:any[],before:String,after:String) : any;
export function binrec (cond:String,then:any[],before:String,after:any[]) : any;
export function binrec (cond:String,then:any[],before:any[],after:Function) : any;
export function binrec (cond:String,then:any[],before:any[],after:String) : any;
export function binrec (cond:String,then:any[],before:any[],after:any[]) : any;
export function binrec (cond:any[],then:Function,before:Function,after:Function) : any;
export function binrec (cond:any[],then:Function,before:Function,after:String) : any;
export function binrec (cond:any[],then:Function,before:Function,after:any[]) : any;
export function binrec (cond:any[],then:Function,before:String,after:Function) : any;
export function binrec (cond:any[],then:Function,before:String,after:String) : any;
export function binrec (cond:any[],then:Function,before:String,after:any[]) : any;
export function binrec (cond:any[],then:Function,before:any[],after:Function) : any;
export function binrec (cond:any[],then:Function,before:any[],after:String) : any;
export function binrec (cond:any[],then:Function,before:any[],after:any[]) : any;
export function binrec (cond:any[],then:String,before:Function,after:Function) : any;
export function binrec (cond:any[],then:String,before:Function,after:String) : any;
export function binrec (cond:any[],then:String,before:Function,after:any[]) : any;
export function binrec (cond:any[],then:String,before:String,after:Function) : any;
export function binrec (cond:any[],then:String,before:String,after:String) : any;
export function binrec (cond:any[],then:String,before:String,after:any[]) : any;
export function binrec (cond:any[],then:String,before:any[],after:Function) : any;
export function binrec (cond:any[],then:String,before:any[],after:String) : any;
export function binrec (cond:any[],then:String,before:any[],after:any[]) : any;
export function binrec (cond:any[],then:any[],before:Function,after:Function) : any;
export function binrec (cond:any[],then:any[],before:Function,after:String) : any;
export function binrec (cond:any[],then:any[],before:Function,after:any[]) : any;
export function binrec (cond:any[],then:any[],before:String,after:Function) : any;
export function binrec (cond:any[],then:any[],before:String,after:String) : any;
export function binrec (cond:any[],then:any[],before:String,after:any[]) : any;
export function binrec (cond:any[],then:any[],before:any[],after:Function) : any;
export function binrec (cond:any[],then:any[],before:any[],after:String) : any;
export function binrec (cond:any[],then:any[],before:any[],after:any[]) : any;
export function curry (f:Function,arity?:number) : Function;
export function curry (f:String,arity?:number) : Function;
export function curry (f:any[],arity?:number) : Function;
export function partial (f:Function) : Function;
export function partial (f:String) : Function;
export function partial (f:any[]) : Function;
export function mixer (f:Function,mix:any[]) : Function;
export function mixer (f:String,mix:any[]) : Function;
export function mixer (f:any[],mix:any[]) : Function;
export function flip (f:Function) : Function;
export function flip (f:String) : Function;
export function flip (f:any[]) : Function;
export function foldl (a:any[],f:Function,z:Object,o?:Object) : Object;
export function foldl (a:String,f:Function,z:Object,o?:Object) : Object;
export function foldl (a:Object,f:Function,z:Object,o?:Object) : Object;
export function foldl1 (a:any[],f:Function,o?:Object) : Object;
export function foldl1 (a:any[],f:String,o?:Object) : Object;
export function foldl1 (a:any[],f:any[],o?:Object) : Object;
export function foldl1 (a:String,f:Function,o?:Object) : Object;
export function foldl1 (a:String,f:String,o?:Object) : Object;
export function foldl1 (a:String,f:any[],o?:Object) : Object;
export function foldl1 (a:Object,f:Function,o?:Object) : Object;
export function foldl1 (a:Object,f:String,o?:Object) : Object;
export function foldl1 (a:Object,f:any[],o?:Object) : Object;
export function foldr (a:any[],f:Function,z:Object,o?:Object) : Object;
export function foldr (a:any[],f:String,z:Object,o?:Object) : Object;
export function foldr (a:any[],f:any[],z:Object,o?:Object) : Object;
export function foldr (a:String,f:Function,z:Object,o?:Object) : Object;
export function foldr (a:String,f:String,z:Object,o?:Object) : Object;
export function foldr (a:String,f:any[],z:Object,o?:Object) : Object;
export function foldr1 (a:any[],f:Function,o?:Object) : Object;
export function foldr1 (a:any[],f:String,o?:Object) : Object;
export function foldr1 (a:any[],f:any[],o?:Object) : Object;
export function foldr1 (a:String,f:Function,o?:Object) : Object;
export function foldr1 (a:String,f:String,o?:Object) : Object;
export function foldr1 (a:String,f:any[],o?:Object) : Object;
export function reduce (a:any[],f:Function,z?:Object) : Object;
export function reduce (a:any[],f:String,z?:Object) : Object;
export function reduce (a:any[],f:any[],z?:Object) : Object;
export function reduce (a:String,f:Function,z?:Object) : Object;
export function reduce (a:String,f:String,z?:Object) : Object;
export function reduce (a:String,f:any[],z?:Object) : Object;
export function reduce (a:Object,f:Function,z?:Object) : Object;
export function reduce (a:Object,f:String,z?:Object) : Object;
export function reduce (a:Object,f:any[],z?:Object) : Object;
export function reduceRight (a:any[],f:Function,z?:Object) : Object;
export function reduceRight (a:any[],f:String,z?:Object) : Object;
export function reduceRight (a:any[],f:any[],z?:Object) : Object;
export function reduceRight (a:String,f:Function,z?:Object) : Object;
export function reduceRight (a:String,f:String,z?:Object) : Object;
export function reduceRight (a:String,f:any[],z?:Object) : Object;
export function unfold (pr:Function,f:Function,g:Function,z:Object,o?:Object) : any[];
export function unfold (pr:Function,f:Function,g:String,z:Object,o?:Object) : any[];
export function unfold (pr:Function,f:Function,g:any[],z:Object,o?:Object) : any[];
export function unfold (pr:Function,f:String,g:Function,z:Object,o?:Object) : any[];
export function unfold (pr:Function,f:String,g:String,z:Object,o?:Object) : any[];
export function unfold (pr:Function,f:String,g:any[],z:Object,o?:Object) : any[];
export function unfold (pr:Function,f:any[],g:Function,z:Object,o?:Object) : any[];
export function unfold (pr:Function,f:any[],g:String,z:Object,o?:Object) : any[];
export function unfold (pr:Function,f:any[],g:any[],z:Object,o?:Object) : any[];
export function unfold (pr:String,f:Function,g:Function,z:Object,o?:Object) : any[];
export function unfold (pr:String,f:Function,g:String,z:Object,o?:Object) : any[];
export function unfold (pr:String,f:Function,g:any[],z:Object,o?:Object) : any[];
export function unfold (pr:String,f:String,g:Function,z:Object,o?:Object) : any[];
export function unfold (pr:String,f:String,g:String,z:Object,o?:Object) : any[];
export function unfold (pr:String,f:String,g:any[],z:Object,o?:Object) : any[];
export function unfold (pr:String,f:any[],g:Function,z:Object,o?:Object) : any[];
export function unfold (pr:String,f:any[],g:String,z:Object,o?:Object) : any[];
export function unfold (pr:String,f:any[],g:any[],z:Object,o?:Object) : any[];
export function unfold (pr:any[],f:Function,g:Function,z:Object,o?:Object) : any[];
export function unfold (pr:any[],f:Function,g:String,z:Object,o?:Object) : any[];
export function unfold (pr:any[],f:Function,g:any[],z:Object,o?:Object) : any[];
export function unfold (pr:any[],f:String,g:Function,z:Object,o?:Object) : any[];
export function unfold (pr:any[],f:String,g:String,z:Object,o?:Object) : any[];
export function unfold (pr:any[],f:String,g:any[],z:Object,o?:Object) : any[];
export function unfold (pr:any[],f:any[],g:Function,z:Object,o?:Object) : any[];
export function unfold (pr:any[],f:any[],g:String,z:Object,o?:Object) : any[];
export function unfold (pr:any[],f:any[],g:any[],z:Object,o?:Object) : any[];
export function rawLambda (s:String) : Object;
export function buildLambda (s:String) : String;
export function lambda (s:Function) : Function;
export function lambda (s:String) : Function;
export function lambda (s:any[]) : Function;
export function clearLambdaCache () : any;
export function linrec (cond:Function,then:Function,before:Function,after:Function) : any;
export function linrec (cond:Function,then:Function,before:Function,after:String) : any;
export function linrec (cond:Function,then:Function,before:Function,after:any[]) : any;
export function linrec (cond:Function,then:Function,before:String,after:Function) : any;
export function linrec (cond:Function,then:Function,before:String,after:String) : any;
export function linrec (cond:Function,then:Function,before:String,after:any[]) : any;
export function linrec (cond:Function,then:Function,before:any[],after:Function) : any;
export function linrec (cond:Function,then:Function,before:any[],after:String) : any;
export function linrec (cond:Function,then:Function,before:any[],after:any[]) : any;
export function linrec (cond:Function,then:String,before:Function,after:Function) : any;
export function linrec (cond:Function,then:String,before:Function,after:String) : any;
export function linrec (cond:Function,then:String,before:Function,after:any[]) : any;
export function linrec (cond:Function,then:String,before:String,after:Function) : any;
export function linrec (cond:Function,then:String,before:String,after:String) : any;
export function linrec (cond:Function,then:String,before:String,after:any[]) : any;
export function linrec (cond:Function,then:String,before:any[],after:Function) : any;
export function linrec (cond:Function,then:String,before:any[],after:String) : any;
export function linrec (cond:Function,then:String,before:any[],after:any[]) : any;
export function linrec (cond:Function,then:any[],before:Function,after:Function) : any;
export function linrec (cond:Function,then:any[],before:Function,after:String) : any;
export function linrec (cond:Function,then:any[],before:Function,after:any[]) : any;
export function linrec (cond:Function,then:any[],before:String,after:Function) : any;
export function linrec (cond:Function,then:any[],before:String,after:String) : any;
export function linrec (cond:Function,then:any[],before:String,after:any[]) : any;
export function linrec (cond:Function,then:any[],before:any[],after:Function) : any;
export function linrec (cond:Function,then:any[],before:any[],after:String) : any;
export function linrec (cond:Function,then:any[],before:any[],after:any[]) : any;
export function linrec (cond:String,then:Function,before:Function,after:Function) : any;
export function linrec (cond:String,then:Function,before:Function,after:String) : any;
export function linrec (cond:String,then:Function,before:Function,after:any[]) : any;
export function linrec (cond:String,then:Function,before:String,after:Function) : any;
export function linrec (cond:String,then:Function,before:String,after:String) : any;
export function linrec (cond:String,then:Function,before:String,after:any[]) : any;
export function linrec (cond:String,then:Function,before:any[],after:Function) : any;
export function linrec (cond:String,then:Function,before:any[],after:String) : any;
export function linrec (cond:String,then:Function,before:any[],after:any[]) : any;
export function linrec (cond:String,then:String,before:Function,after:Function) : any;
export function linrec (cond:String,then:String,before:Function,after:String) : any;
export function linrec (cond:String,then:String,before:Function,after:any[]) : any;
export function linrec (cond:String,then:String,before:String,after:Function) : any;
export function linrec (cond:String,then:String,before:String,after:String) : any;
export function linrec (cond:String,then:String,before:String,after:any[]) : any;
export function linrec (cond:String,then:String,before:any[],after:Function) : any;
export function linrec (cond:String,then:String,before:any[],after:String) : any;
export function linrec (cond:String,then:String,before:any[],after:any[]) : any;
export function linrec (cond:String,then:any[],before:Function,after:Function) : any;
export function linrec (cond:String,then:any[],before:Function,after:String) : any;
export function linrec (cond:String,then:any[],before:Function,after:any[]) : any;
export function linrec (cond:String,then:any[],before:String,after:Function) : any;
export function linrec (cond:String,then:any[],before:String,after:String) : any;
export function linrec (cond:String,then:any[],before:String,after:any[]) : any;
export function linrec (cond:String,then:any[],before:any[],after:Function) : any;
export function linrec (cond:String,then:any[],before:any[],after:String) : any;
export function linrec (cond:String,then:any[],before:any[],after:any[]) : any;
export function linrec (cond:any[],then:Function,before:Function,after:Function) : any;
export function linrec (cond:any[],then:Function,before:Function,after:String) : any;
export function linrec (cond:any[],then:Function,before:Function,after:any[]) : any;
export function linrec (cond:any[],then:Function,before:String,after:Function) : any;
export function linrec (cond:any[],then:Function,before:String,after:String) : any;
export function linrec (cond:any[],then:Function,before:String,after:any[]) : any;
export function linrec (cond:any[],then:Function,before:any[],after:Function) : any;
export function linrec (cond:any[],then:Function,before:any[],after:String) : any;
export function linrec (cond:any[],then:Function,before:any[],after:any[]) : any;
export function linrec (cond:any[],then:String,before:Function,after:Function) : any;
export function linrec (cond:any[],then:String,before:Function,after:String) : any;
export function linrec (cond:any[],then:String,before:Function,after:any[]) : any;
export function linrec (cond:any[],then:String,before:String,after:Function) : any;
export function linrec (cond:any[],then:String,before:String,after:String) : any;
export function linrec (cond:any[],then:String,before:String,after:any[]) : any;
export function linrec (cond:any[],then:String,before:any[],after:Function) : any;
export function linrec (cond:any[],then:String,before:any[],after:String) : any;
export function linrec (cond:any[],then:String,before:any[],after:any[]) : any;
export function linrec (cond:any[],then:any[],before:Function,after:Function) : any;
export function linrec (cond:any[],then:any[],before:Function,after:String) : any;
export function linrec (cond:any[],then:any[],before:Function,after:any[]) : any;
export function linrec (cond:any[],then:any[],before:String,after:Function) : any;
export function linrec (cond:any[],then:any[],before:String,after:String) : any;
export function linrec (cond:any[],then:any[],before:String,after:any[]) : any;
export function linrec (cond:any[],then:any[],before:any[],after:Function) : any;
export function linrec (cond:any[],then:any[],before:any[],after:String) : any;
export function linrec (cond:any[],then:any[],before:any[],after:any[]) : any;
export function buildListcomp (s:String) : String;
export function compileListcomp (s:String) : Function;
export function listcomp (s:String) : any[];
export function multirec (cond:Function,then:Function,before:Function,after:Function) : any;
export function multirec (cond:Function,then:Function,before:Function,after:String) : any;
export function multirec (cond:Function,then:Function,before:Function,after:any[]) : any;
export function multirec (cond:Function,then:Function,before:String,after:Function) : any;
export function multirec (cond:Function,then:Function,before:String,after:String) : any;
export function multirec (cond:Function,then:Function,before:String,after:any[]) : any;
export function multirec (cond:Function,then:Function,before:any[],after:Function) : any;
export function multirec (cond:Function,then:Function,before:any[],after:String) : any;
export function multirec (cond:Function,then:Function,before:any[],after:any[]) : any;
export function multirec (cond:Function,then:String,before:Function,after:Function) : any;
export function multirec (cond:Function,then:String,before:Function,after:String) : any;
export function multirec (cond:Function,then:String,before:Function,after:any[]) : any;
export function multirec (cond:Function,then:String,before:String,after:Function) : any;
export function multirec (cond:Function,then:String,before:String,after:String) : any;
export function multirec (cond:Function,then:String,before:String,after:any[]) : any;
export function multirec (cond:Function,then:String,before:any[],after:Function) : any;
export function multirec (cond:Function,then:String,before:any[],after:String) : any;
export function multirec (cond:Function,then:String,before:any[],after:any[]) : any;
export function multirec (cond:Function,then:any[],before:Function,after:Function) : any;
export function multirec (cond:Function,then:any[],before:Function,after:String) : any;
export function multirec (cond:Function,then:any[],before:Function,after:any[]) : any;
export function multirec (cond:Function,then:any[],before:String,after:Function) : any;
export function multirec (cond:Function,then:any[],before:String,after:String) : any;
export function multirec (cond:Function,then:any[],before:String,after:any[]) : any;
export function multirec (cond:Function,then:any[],before:any[],after:Function) : any;
export function multirec (cond:Function,then:any[],before:any[],after:String) : any;
export function multirec (cond:Function,then:any[],before:any[],after:any[]) : any;
export function multirec (cond:String,then:Function,before:Function,after:Function) : any;
export function multirec (cond:String,then:Function,before:Function,after:String) : any;
export function multirec (cond:String,then:Function,before:Function,after:any[]) : any;
export function multirec (cond:String,then:Function,before:String,after:Function) : any;
export function multirec (cond:String,then:Function,before:String,after:String) : any;
export function multirec (cond:String,then:Function,before:String,after:any[]) : any;
export function multirec (cond:String,then:Function,before:any[],after:Function) : any;
export function multirec (cond:String,then:Function,before:any[],after:String) : any;
export function multirec (cond:String,then:Function,before:any[],after:any[]) : any;
export function multirec (cond:String,then:String,before:Function,after:Function) : any;
export function multirec (cond:String,then:String,before:Function,after:String) : any;
export function multirec (cond:String,then:String,before:Function,after:any[]) : any;
export function multirec (cond:String,then:String,before:String,after:Function) : any;
export function multirec (cond:String,then:String,before:String,after:String) : any;
export function multirec (cond:String,then:String,before:String,after:any[]) : any;
export function multirec (cond:String,then:String,before:any[],after:Function) : any;
export function multirec (cond:String,then:String,before:any[],after:String) : any;
export function multirec (cond:String,then:String,before:any[],after:any[]) : any;
export function multirec (cond:String,then:any[],before:Function,after:Function) : any;
export function multirec (cond:String,then:any[],before:Function,after:String) : any;
export function multirec (cond:String,then:any[],before:Function,after:any[]) : any;
export function multirec (cond:String,then:any[],before:String,after:Function) : any;
export function multirec (cond:String,then:any[],before:String,after:String) : any;
export function multirec (cond:String,then:any[],before:String,after:any[]) : any;
export function multirec (cond:String,then:any[],before:any[],after:Function) : any;
export function multirec (cond:String,then:any[],before:any[],after:String) : any;
export function multirec (cond:String,then:any[],before:any[],after:any[]) : any;
export function multirec (cond:any[],then:Function,before:Function,after:Function) : any;
export function multirec (cond:any[],then:Function,before:Function,after:String) : any;
export function multirec (cond:any[],then:Function,before:Function,after:any[]) : any;
export function multirec (cond:any[],then:Function,before:String,after:Function) : any;
export function multirec (cond:any[],then:Function,before:String,after:String) : any;
export function multirec (cond:any[],then:Function,before:String,after:any[]) : any;
export function multirec (cond:any[],then:Function,before:any[],after:Function) : any;
export function multirec (cond:any[],then:Function,before:any[],after:String) : any;
export function multirec (cond:any[],then:Function,before:any[],after:any[]) : any;
export function multirec (cond:any[],then:String,before:Function,after:Function) : any;
export function multirec (cond:any[],then:String,before:Function,after:String) : any;
export function multirec (cond:any[],then:String,before:Function,after:any[]) : any;
export function multirec (cond:any[],then:String,before:String,after:Function) : any;
export function multirec (cond:any[],then:String,before:String,after:String) : any;
export function multirec (cond:any[],then:String,before:String,after:any[]) : any;
export function multirec (cond:any[],then:String,before:any[],after:Function) : any;
export function multirec (cond:any[],then:String,before:any[],after:String) : any;
export function multirec (cond:any[],then:String,before:any[],after:any[]) : any;
export function multirec (cond:any[],then:any[],before:Function,after:Function) : any;
export function multirec (cond:any[],then:any[],before:Function,after:String) : any;
export function multirec (cond:any[],then:any[],before:Function,after:any[]) : any;
export function multirec (cond:any[],then:any[],before:String,after:Function) : any;
export function multirec (cond:any[],then:any[],before:String,after:String) : any;
export function multirec (cond:any[],then:any[],before:String,after:any[]) : any;
export function multirec (cond:any[],then:any[],before:any[],after:Function) : any;
export function multirec (cond:any[],then:any[],before:any[],after:String) : any;
export function multirec (cond:any[],then:any[],before:any[],after:any[]) : any;
export function numrec (then:Object,after:Function) : any;
export function numrec (then:Object,after:String) : any;
export function numrec (then:Object,after:any[]) : any;
export function keys (obj:Object) : any[];
export function values (obj:Object) : any[];
export function filterIn (obj:Object,f:Function,o?:Object) : Object;
export function filterIn (obj:Object,f:String,o?:Object) : Object;
export function filterIn (obj:Object,f:any[],o?:Object) : Object;
export function forIn (obj:Object,f:Function,o?:Object) : Object;
export function forIn (obj:Object,f:String,o?:Object) : Object;
export function forIn (obj:Object,f:any[],o?:Object) : Object;
export function mapIn (obj:Object,f:Function,o?:Object) : Object;
export function mapIn (obj:Object,f:String,o?:Object) : Object;
export function mapIn (obj:Object,f:any[],o?:Object) : Object;
export function filterRev (a:any[],f:Function,o?:Object) : any[];
export function filterRev (a:any[],f:String,o?:Object) : any[];
export function filterRev (a:any[],f:any[],o?:Object) : any[];
export function filterRev (a:String,f:Function,o?:Object) : any[];
export function filterRev (a:String,f:String,o?:Object) : any[];
export function filterRev (a:String,f:any[],o?:Object) : any[];
export function forEachRev (a:any[],f:Function,o?:Object) : any;
export function forEachRev (a:any[],f:String,o?:Object) : any;
export function forEachRev (a:any[],f:any[],o?:Object) : any;
export function forEachRev (a:String,f:Function,o?:Object) : any;
export function forEachRev (a:String,f:String,o?:Object) : any;
export function forEachRev (a:String,f:any[],o?:Object) : any;
export function mapRev (a:any[],f:Function,o?:Object) : any[];
export function mapRev (a:any[],f:String,o?:Object) : any[];
export function mapRev (a:any[],f:any[],o?:Object) : any[];
export function mapRev (a:String,f:Function,o?:Object) : any[];
export function mapRev (a:String,f:String,o?:Object) : any[];
export function mapRev (a:String,f:any[],o?:Object) : any[];
export function everyRev (a:any[],f:Function,o?:Object) : bool;
export function everyRev (a:any[],f:String,o?:Object) : bool;
export function everyRev (a:any[],f:any[],o?:Object) : bool;
export function everyRev (a:String,f:Function,o?:Object) : bool;
export function everyRev (a:String,f:String,o?:Object) : bool;
export function everyRev (a:String,f:any[],o?:Object) : bool;
export function someRev (a:any[],f:Function,o?:Object) : bool;
export function someRev (a:any[],f:String,o?:Object) : bool;
export function someRev (a:any[],f:any[],o?:Object) : bool;
export function someRev (a:String,f:Function,o?:Object) : bool;
export function someRev (a:String,f:String,o?:Object) : bool;
export function someRev (a:String,f:any[],o?:Object) : bool;
export function scanl (a:any[],f:Function,z:Object,o?:Object) : any[];
export function scanl (a:any[],f:String,z:Object,o?:Object) : any[];
export function scanl (a:any[],f:any[],z:Object,o?:Object) : any[];
export function scanl (a:String,f:Function,z:Object,o?:Object) : any[];
export function scanl (a:String,f:String,z:Object,o?:Object) : any[];
export function scanl (a:String,f:any[],z:Object,o?:Object) : any[];
export function scanl (a:Object,f:Function,z:Object,o?:Object) : any[];
export function scanl (a:Object,f:String,z:Object,o?:Object) : any[];
export function scanl (a:Object,f:any[],z:Object,o?:Object) : any[];
export function scanl1 (a:any[],f:Function,o?:Object) : any[];
export function scanl1 (a:any[],f:String,o?:Object) : any[];
export function scanl1 (a:any[],f:any[],o?:Object) : any[];
export function scanl1 (a:String,f:Function,o?:Object) : any[];
export function scanl1 (a:String,f:String,o?:Object) : any[];
export function scanl1 (a:String,f:any[],o?:Object) : any[];
export function scanl1 (a:Object,f:Function,o?:Object) : any[];
export function scanl1 (a:Object,f:String,o?:Object) : any[];
export function scanl1 (a:Object,f:any[],o?:Object) : any[];
export function scanr (a:any[],f:Function,z:Object,o?:Object) : any[];
export function scanr (a:any[],f:String,z:Object,o?:Object) : any[];
export function scanr (a:any[],f:any[],z:Object,o?:Object) : any[];
export function scanr (a:String,f:Function,z:Object,o?:Object) : any[];
export function scanr (a:String,f:String,z:Object,o?:Object) : any[];
export function scanr (a:String,f:any[],z:Object,o?:Object) : any[];
export function scanr1 (a:any[],f:Function,o?:Object) : any[];
export function scanr1 (a:any[],f:String,o?:Object) : any[];
export function scanr1 (a:any[],f:any[],o?:Object) : any[];
export function scanr1 (a:String,f:Function,o?:Object) : any[];
export function scanr1 (a:String,f:String,o?:Object) : any[];
export function scanr1 (a:String,f:any[],o?:Object) : any[];
export function repeat (n:number,f:Function,z:Object,o?:Object) : any[];
export function repeat (n:number,f:String,z:Object,o?:Object) : any[];
export function repeat (n:number,f:any[],z:Object,o?:Object) : any[];
export function until (pr:Function,f:Function,z:Object,o?:Object) : any[];
export function until (pr:Function,f:String,z:Object,o?:Object) : any[];
export function until (pr:Function,f:any[],z:Object,o?:Object) : any[];
export function until (pr:String,f:Function,z:Object,o?:Object) : any[];
export function until (pr:String,f:String,z:Object,o?:Object) : any[];
export function until (pr:String,f:any[],z:Object,o?:Object) : any[];
export function until (pr:any[],f:Function,z:Object,o?:Object) : any[];
export function until (pr:any[],f:String,z:Object,o?:Object) : any[];
export function until (pr:any[],f:any[],z:Object,o?:Object) : any[];
export function tailrec (cond:Function,then:Function,before:Function) : any;
export function tailrec (cond:Function,then:Function,before:String) : any;
export function tailrec (cond:Function,then:Function,before:any[]) : any;
export function tailrec (cond:Function,then:String,before:Function) : any;
export function tailrec (cond:Function,then:String,before:String) : any;
export function tailrec (cond:Function,then:String,before:any[]) : any;
export function tailrec (cond:Function,then:any[],before:Function) : any;
export function tailrec (cond:Function,then:any[],before:String) : any;
export function tailrec (cond:Function,then:any[],before:any[]) : any;
export function tailrec (cond:String,then:Function,before:Function) : any;
export function tailrec (cond:String,then:Function,before:String) : any;
export function tailrec (cond:String,then:Function,before:any[]) : any;
export function tailrec (cond:String,then:String,before:Function) : any;
export function tailrec (cond:String,then:String,before:String) : any;
export function tailrec (cond:String,then:String,before:any[]) : any;
export function tailrec (cond:String,then:any[],before:Function) : any;
export function tailrec (cond:String,then:any[],before:String) : any;
export function tailrec (cond:String,then:any[],before:any[]) : any;
export function tailrec (cond:any[],then:Function,before:Function) : any;
export function tailrec (cond:any[],then:Function,before:String) : any;
export function tailrec (cond:any[],then:Function,before:any[]) : any;
export function tailrec (cond:any[],then:String,before:Function) : any;
export function tailrec (cond:any[],then:String,before:String) : any;
export function tailrec (cond:any[],then:String,before:any[]) : any;
export function tailrec (cond:any[],then:any[],before:Function) : any;
export function tailrec (cond:any[],then:any[],before:String) : any;
export function tailrec (cond:any[],then:any[],before:any[]) : any;
export function zip () : any[];
export function unzip (a:any[]) : any[];
}

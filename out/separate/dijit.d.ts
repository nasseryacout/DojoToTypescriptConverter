/// <reference path="Object.d.ts" />
/// <reference path="dijit._Widget.d.ts" />
module dijit{
export var _dialogStack : any[];
export var _masterTT : Object;
export var _Calendar : any;
export var _lastKeyDownNode : Object;
export var _curFocus : HTMLElement;
export var _prevFocus : HTMLElement;
export var _activeStack : any;
export var defaultDuration : number;
export var placementRegistry : Object;
export var _frames : Object;
export var dijit : Object;
export var demos : Object;
export var robot : Object;
export var robotx : Object;
export function _underlay (kwArgs:any) : any;
export function showTooltip (innerHTML:String,aroundNode:HTMLElement,position?:any,rtl?:bool) : any;
export function hideTooltip (aroundNode:any) : any;
export function _connectOnUseEventHandler (event:any) : any;
export function isCollapsed () : any;
export function getBookmark () : any;
export function moveToBookmark (bookmark:Object) : any;
export function getFocus (menu?:dijit._Widget,openedForWindow?:any) : any;
export function focus (handle:Object) : any;
export function registerIframe (iframe:HTMLElement) : any;
export function unregisterIframe (handle:Object) : any;
export function registerWin (targetWindow?:any,effectiveNode?:HTMLElement) : any;
export function unregisterWin (handle:any) : any;
export function _onBlurNode (node:HTMLElement) : any;
export function _onTouchNode (node:HTMLElement,by:String) : any;
export function _onFocusNode (node:HTMLElement) : any;
export function _setStack (newStack:any,by:String) : any;
export function byId (id:String) : any;
export function byId (id:any) : any;
export function getUniqueId (widgetType:String) : String;
export function findWidgets (root:HTMLElement) : any;
export function _destroyAll () : any;
export function byNode (node:HTMLElement) : any;
export function getEnclosingWidget (node:HTMLElement) : any;
export function _isElementShown (elem:any) : any;
export function hasDefaultTabStop (elem:any) : any;
export function isTabNavigable (elem:any) : bool;
export function _getTabNavigable (root:HTMLElement) : any;
export function getFirstInTabbingOrder (root:String) : HTMLElement;
export function getFirstInTabbingOrder (root:HTMLElement) : HTMLElement;
export function getLastInTabbingOrder (root:String) : HTMLElement;
export function getLastInTabbingOrder (root:HTMLElement) : HTMLElement;
export function getViewport () : any;
export function placeOnScreen (node:HTMLElement,pos:any,corners:any,padding?:any) : any;
export function _place (node:HTMLElement,choices:any[],layoutNode:any,aroundNodeCoords:Object) : any;
export function placeOnScreenAroundNode (node:HTMLElement,aroundNode:HTMLElement,aroundCorners:Object,layoutNode?:Function) : any;
export function placeOnScreenAroundRectangle (node:HTMLElement,aroundRect:any,aroundCorners:Object,layoutNode:Function) : any;
export function _placeOnScreenAroundRect (node:HTMLElement,x:number,y:number,width:number,height:number,aroundCorners:Object,layoutNode:Function) : any;
export function placeOnScreenAroundElement (node:HTMLElement,aroundElement:Object,aroundCorners:Object,layoutNode:Function) : any;
export function getPopupAroundAlignment (position:any[],leftToRight:bool) : any;
export function scrollIntoView (node:HTMLElement,pos?:Object) : any;
export function hasWaiRole (elem:any,role?:String) : any;
export function getWaiRole (elem:any) : any;
export function setWaiRole (elem:any,role:String) : any;
export function removeWaiRole (elem:any,role:String) : any;
export function hasWaiState (elem:any,state:String) : any;
export function getWaiState (elem:any,state:String) : any;
export function setWaiState (elem:any,state:String,value:String) : any;
export function removeWaiState (elem:any,state:String) : any;
export function getDocumentWindow (doc:any) : any;
export function selectInputText (element:HTMLElement,start?:number,stop?:number) : any;
}
